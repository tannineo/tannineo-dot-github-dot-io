<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tannineo&#39;s Blog</title>
  
  <subtitle>( ﾟ∀。)</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tannineo.github.io/"/>
  <updated>2020-07-20T20:00:57.852Z</updated>
  <id>http://tannineo.github.io/</id>
  
  <author>
    <name>Tannineo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在Jupyter Notebook里面写Perl</title>
    <link href="http://tannineo.github.io/2020-07-20/perl-notebook/"/>
    <id>http://tannineo.github.io/2020-07-20/perl-notebook/</id>
    <published>2020-07-19T23:00:00.000Z</published>
    <updated>2020-07-20T20:00:57.852Z</updated>
    
    <content type="html"><![CDATA[<p>之前我们解决了<a href="https://tannineo.github.io/2020-07-17/perl-project/">Perl项目管理</a>.</p><p>我们接下来尝试为<code>perl</code>环境搭建<code>Jupyter</code>, 在<code>Notebook</code>中进行交互式的编程提高<s>科研</s>效率.</p><a id="more"></a><ul><li><a href="#%E9%81%97%E7%95%99%E9%97%AE%E9%A2%98-perlbrew%E4%B8%8B%E7%9A%84cpanm">遗留问题: <code>perlbrew</code>下的<code>cpanm</code></a></li><li><a href="#perl-notebook-%E7%8E%AF%E5%A2%83">Perl Notebook 环境</a><ul><li><a href="#%E5%AE%89%E8%A3%85zeromq">安装<code>ZeroMQ</code></a></li><li><a href="#%E5%AE%89%E8%A3%85jupyter">安装<code>Jupyter</code></a></li><li><a href="#%E5%AE%89%E8%A3%85develiperl">安装<code>Devel::IPerl</code></a></li></ul></li><li><a href="#%E8%AF%95%E7%94%A8">试用</a></li><li><a href="#%E6%80%BB%E7%BB%93">总结</a></li></ul><p>注意, 所有操作基于OSX, 但是查看参考链接能发现Windows或者Linux的对应方案.</p>        <h2 id="遗留问题-perlbrew下的cpanm"   >          <a href="#遗留问题-perlbrew下的cpanm" class="heading-link"><i class="fas fa-link"></i></a>遗留问题: perlbrew下的cpanm</h2>      <p><a href="https://metacpan.org/pod/cpanm" target="_blank" rel="noopener"><code>cpanm</code></a>在一般情况下都会被其他依赖的作者作为<code>perl</code>自带<code>cpan</code>的替代品, 用来安装依赖. 它输出更简洁, 本身体积和运行花销也不大.</p><p><code>perlbrew</code>的作者的文章<span class="exturl"><a class="exturl__link"   href="https://perlbrew.pl/Perlbrew-and-Friends.html"  target="_blank" rel="noopener">Perlbrew and Friends</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>提到了<code>cpanm</code>的安装. 基本问题就是: <code>cpanm</code>并不是作为<code>perl</code>官方工具链的一部分, 需要自己手动安装, 而每次切换<code>perl</code>版本会将<code>cpanm</code>从<code>PATH</code>中移除.</p><p>在当前环境下安装<code>cpanm</code>, 我们可以输入:</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perlbrew install-cpanm</span><br></pre></td></tr></table></div></figure>        <h2 id="perl-notebook-环境"   >          <a href="#perl-notebook-环境" class="heading-link"><i class="fas fa-link"></i></a>Perl Notebook 环境</h2>      <p>我们接下来的操作都基于<span class="exturl"><a class="exturl__link"   href="https://github.com/EntropyOrg/p5-Devel-IPerl"  target="_blank" rel="noopener">Devel::IPerl</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>的README.</p><p>但是在执行的过程中, 我们需要搞清楚对于每个组件, 对于相应的语言, 我们会基于何种形式安装:</p><ul><li><code>python</code>相关的组件会被安装在沙箱环境中(本肥肥使用<code>pipenv</code>): <code>jupyter</code></li><li><code>perl</code>的通用依赖安装于对应的<code>perl</code>版本中(如<code>cpanm</code>): <code>ZMQ::LibZMQ3</code> &amp; <code>Devel::IPerl</code><ul><li>项目依赖安装在<code>perl_version@project_name</code>的沙箱环境中</li></ul></li><li>其余组件安装在系统环境中, 比如数据库或者消息队列: <code>ZeroMQ</code></li></ul>        <h3 id="安装zeromq"   >          <a href="#安装zeromq" class="heading-link"><i class="fas fa-link"></i></a>安装ZeroMQ</h3>      <p>OSX省心…</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install zmq</span><br></pre></td></tr></table></div></figure><p>接下来安装<code>perl</code>操作<code>ZeroMQ</code>的依赖:</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export ARCHFLAGS='-arch x86_64'</span><br><span class="line">cpanm --build-args 'OTHERLDFLAGS=' ZMQ::LibZMQ3</span><br></pre></td></tr></table></div></figure>        <h3 id="安装jupyter"   >          <a href="#安装jupyter" class="heading-link"><i class="fas fa-link"></i></a>安装Jupyter</h3>      <p>在工程目录下于终端输入:</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pipenv shell</span><br></pre></td></tr></table></div></figure><p>进入<code>pipenv</code>沙箱, 并生成一个<code>./Pipfile</code>文件. 我们在这个沙箱中安装<code>jupyter</code>:</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pipenv install jupyter --skip-lock</span><br></pre></td></tr></table></div></figure><p><code>pipenv</code>的生成快照的速度相当之慢, 所以没有特殊需求的话, 安装dependency时可以使用<code>--skip-lock</code>跳过locking.</p><p>如果直接使用<code>pip</code>安装依赖, 这个沙箱环境中也会有依赖, 但是不会被记录在<code>./Pipfile</code>文件里.</p>        <h3 id="安装develiperl"   >          <a href="#安装develiperl" class="heading-link"><i class="fas fa-link"></i></a>安装Devel::IPerl</h3>      <figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cpanm Devel::IPerl</span><br></pre></td></tr></table></div></figure><p>这会经历一段漫长的编译和测试过程. 在文章撰写之日, 本肥肥发现安装会无法通过.</p><p><code>Devel::IPerl</code>作者的解决方案是手动安装特定版本的依赖:</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cpanm Markdent@0.26 Markdown::Pod@0.006</span><br></pre></td></tr></table></div></figure><p>之后重新安装<code>Devel::IPerl</code>, 可能需要force install:</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cpanm Devel::IPerl --force</span><br></pre></td></tr></table></div></figure>        <h2 id="试用"   >          <a href="#试用" class="heading-link"><i class="fas fa-link"></i></a>试用</h2>      <p>在环境下输入:</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iperl notebook</span><br></pre></td></tr></table></div></figure><p>我们就会打开熟悉的<code>jupyter</code>编辑器页面. 新建notebook时选择&quot;IPerl 0.009&quot;.</p><p>使用过程中只有<code>运行下一步</code>和<code>重启kernel</code>的功能是完全正常的(这个项目最后一次更新是2018年…). 大家在试用的时候可以注意<code>jupyter</code>的输出日志.</p><p><img src="./20200720_perl-notebook_01.png" alt="notebook" /></p><p><img src="./20200720_perl-notebook_02.png" alt="logs" /></p><p>但这些也足够满足我们的需求了, 我们能够执行基本的<code>perl</code>交互式编程了!</p><p>引入我们在上一篇文章中安装的<code>./local/</code>和自己的<code>./lib</code>也没问题!</p>        <h2 id="总结"   >          <a href="#总结" class="heading-link"><i class="fas fa-link"></i></a>总结</h2>      <ul><li>理清我们所有组件的安装环境/位置.<ul><li>可以的话写个README记录一下.</li></ul></li><li>参考<code>Devel::IPerl</code>的<code>RAEDME.md</code>安装:<ul><li><code>ZeroMQ</code></li><li><code>jupyter</code></li><li><code>Devel::IPerl</code>(可能会出错, 详读README)</li></ul></li><li><code>iperl notebook</code>打开<code>jupyter</code>.<ul><li>bug多多, 但是能用</li></ul></li></ul><hr /><p>对, 没错, 我就是靠别人的<code>README.md</code>水了一篇博客!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前我们解决了&lt;a href=&quot;https://tannineo.github.io/2020-07-17/perl-project/&quot;&gt;Perl项目管理&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;我们接下来尝试为&lt;code&gt;perl&lt;/code&gt;环境搭建&lt;code&gt;Jupyter&lt;/code&gt;, 在&lt;code&gt;Notebook&lt;/code&gt;中进行交互式的编程提高&lt;s&gt;科研&lt;/s&gt;效率.&lt;/p&gt;
    
    </summary>
    
    
      <category term="programming" scheme="http://tannineo.github.io/categories/programming/"/>
    
    
      <category term="perl" scheme="http://tannineo.github.io/tags/perl/"/>
    
      <category term="project" scheme="http://tannineo.github.io/tags/project/"/>
    
      <category term="tool" scheme="http://tannineo.github.io/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>Perl项目管理</title>
    <link href="http://tannineo.github.io/2020-07-17/perl-project/"/>
    <id>http://tannineo.github.io/2020-07-17/perl-project/</id>
    <published>2020-07-16T23:00:00.000Z</published>
    <updated>2020-07-17T17:40:33.797Z</updated>
    
    <content type="html"><![CDATA[<p>文章参考: <span class="exturl"><a class="exturl__link"   href="http://christopher.rasch-olsen.no/perl-dependency-management"  target="_blank" rel="noopener">A gentle introduction to Perl-dependency management</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>, 参考的内容可能过时, 所以会有所出入.</p><p>本肥肥手头有一个别人给的<code>perl</code>代码, 利用它来完成自己的课题. 在尝试理解程序的情况下我在搬运代码到自己新建的项目里. 过程中碰到了一些问题让我注意到一条隔离<code>perl</code>项目依赖的工具链是有必要的.</p><a id="more"></a><p>如果是使用<code>node</code>尝试开发的同学一定会有所体会, <code>node_modules</code>的依赖版本控制冗余(node_modules blackhole)但是有效, 配合<code>nvm</code>也能锁定<code>node</code>运行时的版本. 而在<code>python</code>下进行开发, 基于<code>virtualenv</code>的沙箱环境配合一个配置文件(<code>environment.yml</code>之于<code>conda</code>, <code>Pipfile</code>之于<code>pipenv</code>, 或者无沙箱的<code>requirements.txt</code>之于<code>pip</code>), 可以很好的组织项目而互不影响. 类似的, <code>go</code>的<code>module</code>模式(<code>go.mod</code>)在解决依赖问题. 管理<code>java</code>的<code>jdk</code>版本有<code>jenv</code>这个工具.</p><p>那么对于<code>perl</code>呢?</p><ul><li><a href="#%E9%9C%80%E8%A6%81%E8%A7%A3%E5%86%B3%E7%9A%84%E9%97%AE%E9%A2%98">需要解决的问题</a></li><li><a href="#%E4%BD%BF%E7%94%A8perlbrew%E7%AE%A1%E7%90%86perl%E7%89%88%E6%9C%AC">使用<code>perlbrew</code>管理<code>perl</code>版本</a></li><li><a href="#%E4%BD%BF%E7%94%A8perlbrew%E9%9A%94%E7%A6%BB%E9%A1%B9%E7%9B%AE%E4%BE%9D%E8%B5%96%E6%B2%99%E7%AE%B1">使用<code>perlbrew</code>隔离项目依赖(沙箱)</a></li><li><a href="#%E4%BD%BF%E7%94%A8carton%E5%92%8Ccpanfile%E7%AE%A1%E7%90%86%E4%BE%9D%E8%B5%96">使用<code>carton</code>和<code>cpanfile</code>管理依赖</a></li><li><a href="#%E6%80%BB%E7%BB%93">总结</a></li><li><a href="#%E4%B9%8B%E5%90%8E">之后</a><ul><li><a href="#%E8%B0%83%E6%95%B4%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84">调整项目结构</a></li><li><a href="#%E8%83%8C%E5%90%8E%E7%9A%84%E5%8E%9F%E7%90%86">背后的原理</a></li><li><a href="#osx%E4%B8%8Bhomebrew%E5%92%8Cperlbrew%E7%9A%84%E5%85%BC%E5%AE%B9%E9%97%AE%E9%A2%98">OSX下Homebrew和<code>perlbrew</code>的兼容问题</a></li><li><a href="#%E5%B9%B6%E4%B8%8D%E6%98%AF%E5%94%AF%E4%B8%80%E6%96%B9%E6%A1%88--%E4%BB%A3%E7%A0%81">并不是唯一方案 / 代码</a></li></ul></li></ul>        <h2 id="需要解决的问题"   >          <a href="#需要解决的问题" class="heading-link"><i class="fas fa-link"></i></a>需要解决的问题</h2>      <p>我们需要解决的问题有:</p><ul><li>固定<code>perl</code>的版本, 提供一个沙箱环境.<ul><li>尽可能不去使用<strong>可能老旧的</strong>系统自带<code>perl</code>, 也尽可能不对依赖于自带<code>perl</code>的系统组件造成影响.</li></ul></li><li>隔离不同项目间的依赖.<ul><li>对于同一个包, 它们可能使用了不同版本.</li></ul></li><li>锁定依赖的版本.<ul><li>新版本的依赖接口行为可能发生变化, 或者新版本可能会引入bug.</li></ul></li></ul><p>本肥肥会尝试使用<a href="https://perlbrew.pl/" target="_blank" rel="noopener"><code>perlbrew</code></a>和官方的工具<a href="https://www.cpan.org/" target="_blank" rel="noopener"><code>cpan</code></a>来解决上述问题. 之前本肥肥使用的是<a href="https://github.com/tokuhirom/plenv" target="_blank" rel="noopener"><code>plenv</code></a>, 某些地方也会有比较. 所有操作在OSX下进行.</p>        <h2 id="使用perlbrew管理perl版本"   >          <a href="#使用perlbrew管理perl版本" class="heading-link"><i class="fas fa-link"></i></a>使用perlbrew管理perl版本</h2>      <p>遵照<code>perlbrew</code><span class="exturl"><a class="exturl__link"   href="https://perlbrew.pl/"  target="_blank" rel="noopener">官网</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>的说明:</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\curl -L https:&#x2F;&#x2F;install.perlbrew.pl | bash</span><br></pre></td></tr></table></div></figure><p><code>\</code>在交互式的shell中禁止了alias, 直接运行<code>curl</code>的可执行程序. 替换为<code>| zsh</code>会使得安装失败.</p><p>提示在<code>~/.profile</code>加入<code>source ~/perl5/perlbrew/etc/bashrc</code>. 但是<code>zsh</code>默认不会执行<code>~/.profile</code>里的内容, 所以我们把<code>source ~/perl5/perlbrew/etc/bashrc</code>加入自己的<code>~/.zshrc</code>.</p><p><code>perlbrew</code>查看用法, <code>perlbrew available</code>查看可安装版本. 本肥肥编辑时是<code>perl-5.32.0</code>.</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perlbrew install perl-5.32.0</span><br></pre></td></tr></table></div></figure><p>与<code>plenv</code>相同, <code>perlbrew</code>也是下载源码在本机编译, 需要等候一段时间.</p><p><code>perlbrew switch perl-5.32.0</code>将这个版本设为登录后默认版本, <code>perlbrew use</code>加版本则会在当前session切换.</p><p><s>其实在日常使用<code>nvm</code>或者类似工具的时候, 都是偶尔想到了就升级到最新版本, 除非碰到问题才会使用某一特定版本或者降级,.可以把这些工具看作是快速安装运行时的工具.</s></p>        <h2 id="使用perlbrew隔离项目依赖沙箱"   >          <a href="#使用perlbrew隔离项目依赖沙箱" class="heading-link"><i class="fas fa-link"></i></a>使用perlbrew隔离项目依赖(沙箱)</h2>      <p>对于某个有名字的项目, 比如<code>code</code>, 我们创建一个专门的环境用来保存依赖的lib:</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">perlbrew lib create code</span><br><span class="line"></span><br><span class="line">perlbrew use perl-5.32.0@code</span><br></pre></td></tr></table></div></figure><p>命名规则是<code>perl版本@名称</code>, 缺省<code>@</code>和之前的内容会使用当前环境的版本. 在这个环境下就可以进行开发了, 可以考虑在项目根目录写一个脚本来记忆和方便运行.</p><p><code>perlbrew lib</code>查看具体用法.</p><p><code>plenv</code>并没有自带项目依赖隔离, 这一功能通过插件<a href="https://github.com/miyagawa/plenv-contrib" target="_blank" rel="noopener"><code>plenv-contrib</code></a>达成, 不是特别直接. <a href="https://metacpan.org/pod/local::lib" target="_blank" rel="noopener"><code>local::lib</code></a>可能是这一功能更原始的实现.</p><p>输入下面的命令可以查看<code>@INC</code>(<code>perl</code>搜索依赖的路径):</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl -e "print qq(@INC)"</span><br></pre></td></tr></table></div></figure>        <h2 id="使用carton和cpanfile管理依赖"   >          <a href="#使用carton和cpanfile管理依赖" class="heading-link"><i class="fas fa-link"></i></a>使用carton和cpanfile管理依赖</h2>      <p>相比于沙箱, 一个更直接的办法是将依赖全部下载到在项目中, 然后在编写时include.</p><p><a href="https://metacpan.org/pod/Carton" target="_blank" rel="noopener"><code>carton</code></a>是能达成我们目标的工具.</p><p>比如我们想尝试这个<code>perl</code>的服务器框架<a href="http://perldancer.org/" target="_blank" rel="noopener"><code>Dancer</code></a>, <code>test.pl</code>:</p><figure class="highlight perl"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env perl</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> Dancer2;</span><br><span class="line"></span><br><span class="line">get <span class="string">'/'</span> =&gt; <span class="function"><span class="keyword">sub</span> </span>&#123;</span><br><span class="line">  <span class="string">"Hello World!"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">dance;</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>;</span><br></pre></td></tr></table></div></figure><p>我们尝试运行(<code>perl test.pl</code>)会发现:</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Can&#39;t locate Dancer2.pm in @INC ...</span><br></pre></td></tr></table></div></figure><p>新建<code>cpanfile</code>:</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cpanfile</span><br><span class="line">requires &#39;Dancer2&#39;, &#39;0.300004&#39;;</span><br></pre></td></tr></table></div></figure><p>接下来:</p><ul><li>安装<code>carton</code>: <code>cpan Carton</code>.</li><li>安装依赖: <code>carton install</code>, 它会读取<code>./cpanfile</code>, 安装依赖并且声称快照文件<code>cpanfile.snapshot</code>.</li></ul><p>运行, 可以:</p><ul><li>使用<code>carton</code>运行命令: <code>carton exec -- perl test.pl</code>.<ul><li><code>--</code>能防止<code>carton</code>读取<code>exec</code>之后的一些配置flag.</li></ul></li><li>在<code>test.pl</code>中, 加入<code>use lib &quot;$FindBin::Bin/local/lib/perl5&quot;;</code>.<ul><li><code>FindBin::Bin</code>确认执行时脚本的路径.</li><li>这样我们可以用沙箱环境的<code>perl</code>直接运行: <code>perl test.pl</code>.</li></ul></li></ul><p>还有其他的一些工具(都出自一个作者<span class="exturl"><a class="exturl__link"   href="https://github.com/miyagawa"  target="_blank" rel="noopener">miyagawa</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>):</p><ul><li><code>cpanm</code> (替代<code>cpan</code>)</li><li><code>carmel</code> (实验性, 替代<code>carton</code>)</li></ul>        <h2 id="总结"   >          <a href="#总结" class="heading-link"><i class="fas fa-link"></i></a>总结</h2>      <ol><li><code>perlbrew</code>管理<code>perl</code>版本</li><li><code>perlbrew</code>创建沙箱(类似<code>conda</code>) <s>可选</s></li><li>编写<code>cpanfile</code>管理依赖版本, 使用<code>carton</code>安装到<code>./local/</code>并生成快照</li><li><code>use lib &quot;$FindBin::Bin/../local/lib/perl5&quot;;</code> <s>可选</s></li></ol>        <h2 id="之后"   >          <a href="#之后" class="heading-link"><i class="fas fa-link"></i></a>之后</h2>              <h3 id="调整项目结构"   >          <a href="#调整项目结构" class="heading-link"><i class="fas fa-link"></i></a>调整项目结构</h3>      <p>我们可以调整一下目录结构, 更符合规范. 注意调整<code>use lib</code>的路径.</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── README.md</span><br><span class="line">├── bin</span><br><span class="line">│   └── test.pl</span><br><span class="line">├── cpanfile</span><br><span class="line">├── cpanfile.snapshot</span><br><span class="line">├── lib                 # use lib</span><br><span class="line">│   └── TestLib</span><br><span class="line">│       └── Tests.pm</span><br><span class="line">└── local</span><br><span class="line">    ├── bin</span><br><span class="line">    ├── cache</span><br><span class="line">    ├── lib             # use lib</span><br><span class="line">    └── man</span><br></pre></td></tr></table></div></figure><p>我们把<code>&quot;Hello World!&quot;</code>写成<code>sub</code>并且装进了自己的module里, 在<code>./lib/TestLib/Tests.pm</code>中:</p><figure class="highlight perl"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> TestLib::Tests;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> Exporter;</span><br><span class="line"></span><br><span class="line">@ISA = <span class="keyword">qw</span>/Exporter/;</span><br><span class="line"></span><br><span class="line">@EXPORT_OK = <span class="keyword">qw</span>/hello/;    <span class="comment"># use时必须显式声明hello</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># @EXPORT    = qw/hello/;  # use时无需声明hello</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">hello</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"Hello World!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>;</span><br></pre></td></tr></table></div></figure><p>最后的<code>test.pl</code>:</p><figure class="highlight perl"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env perl</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> FindBin;</span><br><span class="line"><span class="keyword">use</span> lib <span class="string">"$FindBin::Bin/../local/lib/perl5"</span>;</span><br><span class="line"><span class="keyword">use</span> lib <span class="string">"$FindBin::Bin/../lib/"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> Dancer2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> TestLib::Tests <span class="keyword">qw</span>/hello/;</span><br><span class="line"></span><br><span class="line">get <span class="string">'/'</span> =&gt; <span class="function"><span class="keyword">sub</span> </span>&#123;</span><br><span class="line">  hello();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">dance;</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>;</span><br></pre></td></tr></table></div></figure>        <h3 id="背后的原理"   >          <a href="#背后的原理" class="heading-link"><i class="fas fa-link"></i></a>背后的原理</h3>      <p>大概率都是基于shell的环境变量更改.</p><p>之后需要详细了解<code>perl</code>, 或者说<code>perl5</code>的一些基于环境变量的路径配置.</p>        <h3 id="osx下homebrew和perlbrew的兼容问题"   >          <a href="#osx下homebrew和perlbrew的兼容问题" class="heading-link"><i class="fas fa-link"></i></a>OSX下Homebrew和perlbrew的兼容问题</h3>      <p>问题主要是Homebrew不会使用<code>perlbrew</code>所安装的<code>perl</code>, 若是完全交给Homebrew管理, 开发中也不会涉及Homebrew所安装的组件的话, 这个问题放置也没关系.</p><p>具体请查看这个<span class="exturl"><a class="exturl__link"   href="https://github.com/gugod/App-perlbrew/wiki/Deploying-Perl-bindings-from-tools-installed-with-Homebrew-on-OS-X"  target="_blank" rel="noopener">github wiki</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h3 id="并不是唯一方案-代码"   >          <a href="#并不是唯一方案-代码" class="heading-link"><i class="fas fa-link"></i></a>并不是唯一方案 / 代码</h3>      <p>A Perl programming motto.</p><blockquote><p>TIMTOWTDI = There Is More Than One Way To Do It</p></blockquote><p>See wiki page: <span class="exturl"><a class="exturl__link"   href="https://en.wikipedia.org/wiki/There%27s_more_than_one_way_to_do_it"  target="_blank" rel="noopener">TIMTOWTDI</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章参考: &lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;http://christopher.rasch-olsen.no/perl-dependency-management&quot;  target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A gentle introduction to Perl-dependency management&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;, 参考的内容可能过时, 所以会有所出入.&lt;/p&gt;
&lt;p&gt;本肥肥手头有一个别人给的&lt;code&gt;perl&lt;/code&gt;代码, 利用它来完成自己的课题. 在尝试理解程序的情况下我在搬运代码到自己新建的项目里. 过程中碰到了一些问题让我注意到一条隔离&lt;code&gt;perl&lt;/code&gt;项目依赖的工具链是有必要的.&lt;/p&gt;
    
    </summary>
    
    
      <category term="programming" scheme="http://tannineo.github.io/categories/programming/"/>
    
    
      <category term="perl" scheme="http://tannineo.github.io/tags/perl/"/>
    
      <category term="dependency" scheme="http://tannineo.github.io/tags/dependency/"/>
    
      <category term="project" scheme="http://tannineo.github.io/tags/project/"/>
    
      <category term="tool" scheme="http://tannineo.github.io/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://tannineo.github.io/2020-05-07/hello-world/"/>
    <id>http://tannineo.github.io/2020-05-07/hello-world/</id>
    <published>2020-05-06T23:00:00.000Z</published>
    <updated>2020-05-08T21:48:49.222Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <span class="exturl"><a class="exturl__link"   href="https://hexo.io/"  target="_blank" rel="noopener">Hexo</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>! This is your very first post. Check <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/"  target="_blank" rel="noopener">documentation</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> for more info. If you get any problems when using Hexo, you can find the answer in <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/troubleshooting.html"  target="_blank" rel="noopener">troubleshooting</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> or you can ask me on <span class="exturl"><a class="exturl__link"   href="https://github.com/hexojs/hexo/issues"  target="_blank" rel="noopener">GitHub</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>.</p><a id="more"></a>        <h2 id="code"   >          <a href="#code" class="heading-link"><i class="fas fa-link"></i></a>Code</h2>      <figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">quicksort</span>(<span class="params">X, i, j</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (i &lt; j) &#123;</span><br><span class="line">    p = partition(X, i, j)</span><br><span class="line">    quicksort(X, i, p - <span class="number">1</span>)</span><br><span class="line">    quicksort(X, p + <span class="number">1</span>, j)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">partition</span>(<span class="params">X, i, j</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> pivot = X[j]</span><br><span class="line">  <span class="keyword">var</span> m = i</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> n = i; n &lt; j; n++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (X[n] &lt;= pivot) &#123;</span><br><span class="line">      swap(X, m, n)</span><br><span class="line">      m += <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  swap(X, m, j)</span><br><span class="line">  <span class="keyword">return</span> m</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">swap</span>(<span class="params">X, a, b</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> z = X[a]</span><br><span class="line">  X[a] = X[b]</span><br><span class="line">  X[b] = z</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> X = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">  X.push(<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">100</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">quicksort(X, <span class="number">0</span>, X.length - <span class="number">1</span>)</span><br><span class="line"><span class="built_in">console</span>.info(X)</span><br></pre></td></tr></table></div></figure>        <h2 id="math"   >          <a href="#math" class="heading-link"><i class="fas fa-link"></i></a>Math</h2>              <h3 id="dollar-signs"   >          <a href="#dollar-signs" class="heading-link"><i class="fas fa-link"></i></a>Dollar Signs</h3>      <figure class="highlight tex"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">\<span class="name">cos</span></span> 2<span class="tag">\<span class="name">theta</span> = </span><span class="tag">\<span class="name">cos</span></span>^2 <span class="tag">\<span class="name">theta</span></span> - <span class="tag">\<span class="name">sin</span></span>^2 <span class="tag">\<span class="name">theta</span></span></span><br></pre></td></tr></table></div></figure><p>This inline equation <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>cos</mi><mo>⁡</mo><mn>2</mn><mi>θ</mi><mo>=</mo><msup><mo><mi>cos</mi><mo>⁡</mo></mo><mn>2</mn></msup><mi>θ</mi><mo>−</mo><msup><mo><mi>sin</mi><mo>⁡</mo></mo><mn>2</mn></msup><mi>θ</mi></mrow><annotation encoding="application/x-tex">\cos 2\theta = \cos^2 \theta - \sin^2 \theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mop"><span class="mop">cos</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.871868em;vertical-align:0em;"></span><span class="mop"><span class="mop">sin</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.871868em;"><span style="top:-3.12076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span>.</p><figure class="highlight tex"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;aligned&#125;</span></span></span><br><span class="line">  <span class="tag">\<span class="name">dot</span><span class="string">&#123;x&#125;</span></span> &amp; = <span class="tag">\<span class="name">sigma</span></span>(y-x) <span class="tag">\<span class="name">\</span></span></span><br><span class="line">  <span class="tag">\<span class="name">dot</span><span class="string">&#123;y&#125;</span></span> &amp; = <span class="tag">\<span class="name">rho</span></span> x - y - xz <span class="tag">\<span class="name">\</span></span></span><br><span class="line">  <span class="tag">\<span class="name">dot</span><span class="string">&#123;z&#125;</span></span> &amp; = -<span class="tag">\<span class="name">beta</span></span> z + xy</span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;aligned&#125;</span></span></span><br></pre></td></tr></table></div></figure><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mover accent="true"><mi>x</mi><mo>˙</mo></mover></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mover accent="true"><mi>y</mi><mo>˙</mo></mover></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>ρ</mi><mi>x</mi><mo>−</mo><mi>y</mi><mo>−</mo><mi>x</mi><mi>z</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mover accent="true"><mi>z</mi><mo>˙</mo></mover></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo>−</mo><mi>β</mi><mi>z</mi><mo>+</mo><mi>x</mi><mi>y</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">  \begin{aligned}    \dot{x} &amp; = \sigma(y-x) \\    \dot{y} &amp; = \rho x - y - xz \\    \dot{z} &amp; = -\beta z + xy  \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.500000000000002em;vertical-align:-2.000000000000001em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5000000000000004em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.11111000000000001em;">˙</span></span></span></span></span></span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08333000000000002em;">˙</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span><span style="top:-1.6599999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08333000000000002em;">˙</span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.000000000000001em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5000000000000004em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">ρ</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">x</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-1.6599999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">x</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.000000000000001em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>        <h2 id="others"   >          <a href="#others" class="heading-link"><i class="fas fa-link"></i></a>Others</h2>      ]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://hexo.io/&quot;  target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;! This is your very first post. Check &lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://hexo.io/docs/&quot;  target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://hexo.io/docs/troubleshooting.html&quot;  target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt; or you can ask me on &lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://github.com/hexojs/hexo/issues&quot;  target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;
    
    </summary>
    
    
      <category term="misc" scheme="http://tannineo.github.io/categories/misc/"/>
    
    
      <category term="hello world" scheme="http://tannineo.github.io/tags/hello-world/"/>
    
  </entry>
  
</feed>
